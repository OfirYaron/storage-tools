name: CI

on:
  push:
    branches: [ main, feature/* ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Run isort check
      run: |
        isort --check-only --diff storage_tools/ tests/
    
    - name: Run black check
      run: |
        black --check storage_tools/ tests/
    
    - name: Run flake8
      run: |
        flake8 storage_tools/ tests/
    
    - name: Run mypy
      run: |
        mypy storage_tools/ tests/
    
    - name: Run tests with coverage
      run: |
        pytest --cov=storage_tools --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Check import sorting with isort
      run: |
        isort --check-only --diff storage_tools/ tests/
    
    - name: Check code formatting with black
      run: |
        black --check --diff storage_tools/ tests/
    
    - name: Lint with flake8
      run: |
        flake8 storage_tools/ tests/ --statistics
    
    - name: Type check with mypy
      run: |
        mypy storage_tools/ tests/ --show-error-codes

  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: |
        python -m build
    
    - name: Check package with twine
      run: |
        twine check dist/*
